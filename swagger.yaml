openapi: 3.0.0
info:
    version: 1.0.0
    title: MatchUp
    description: BackEnd for the wbd project

server:
    - url: http://localhost:5000

tags:
    - name: User
      description: API to manage User Credentials / Data
    - name: Product
      description: API to manage the Products
    - name: Blog
      description: API to manage the Blogs

paths:
    /products:
        get:
            summary: Get all the Products
            tags: [Product]
            parameters:
                - name: x-auth-token
                  in: header
                  type: string
                  required: true
            responses:
                "200":
                    description: The list of all the Products
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Product"
        post:
            summary: Add a single Product
            tags: [Product]
            parameters:
                - name: x-auth-token
                  in: header
                  type: string
                  required: true
            requestBody:
                required: true
                content:
                    multipart/form-data:
                        schema:
                            $ref: "#/components/schemas/Product"
            responses:
                "200":
                    description: Product was created successfully

    /products/{productID}:
        patch:
            summary: Update a Product by ID
            tags: [Product]
            parameters:
                - name: x-auth-token
                  in: header
                  type: string
                  required: true
                - name: productID
                  in: path
                  required: true
                  description: Autogenerated Product ID by Mongoose
                  schema:
                      type: string
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: "#/definitions/ProductPatchRequest"
            responses:
                "200":
                    description: Update a single product by the id.
                    content:
                        application/json:
                            schema: 
                                 $ref: "#/components/schemas/Product"
        delete:
            summary: Delete a product by id
            tags: [Product]
            parameters:
                - name: x-auth-token
                  in: header
                  type: string
                  required: true
                - name: productID
                  in: path
                  required: true
                  description: Autogenerated Product ID by Mongoose
                  schema:
                      type: string
            responses:
                "200":
                    description: Successfully Deleted Product by the id.
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Product"
    /blogs:
        get:
            summary: Get all the Blogs
            tags: [Blog]
            responses:
                "200":
                    description: The list of all the Blogs
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Blog"
        post:
            summary: Add a single Blog
            tags: [Blog]
            parameters:
                - name: x-auth-token
                  in: header
                  type: string
                  required: true
            requestBody:
                required: true
                content:
                    multipart/form-data:
                        schema:
                            $ref: "#/components/schemas/Blog"
            responses:
                "200":
                    description: Blog was created successfully
    /blogs/{blogID}:
        get:
            summary: Get a blog by id
            tags: [Blog]
            parameters:
                - name: x-auth-token
                  in: header
                  type: string
                  required: true
                - name: blogID
                  in: path
                  required: true
                  description: Autogenerated Blog ID by Mongoose
                  schema:
                      type: string
            responses:
                "200":
                    description: Successfully Fetched single Blog by the id.
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Blog"
        patch:
            summary: Update a Blog by ID
            tags: [Blog]
            parameters:
                - name: x-auth-token
                  in: header
                  type: string
                  required: true
                - name: blogID
                  in: path
                  required: true
                  description: Autogenerated Blog ID by Mongoose
                  schema:
                      type: string
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: "#/definitions/BlogPatchRequest"
            responses:
                "200":
                    description: Update a single Blog by the id.
                    content:
                        application/json:
                            schema: 
                                $ref: "#/components/schemas/Blog"
        delete:
            summary: Delete a blog by id
            tags: [Blog]
            parameters:
                - name: x-auth-token
                  in: header
                  type: string
                  required: true
                - name: blogID
                  in: path
                  required: true
                  description: Autogenerated Blog ID by Mongoose
                  schema:
                      type: string
            responses:
                "200":
                    description: Successfully Deleted Blog by the id.
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Blog"

    /users:
        get:
            summary: Get all the Users
            tags: [User]
            parameters:
                - name: x-auth-token
                  in: header
                  type: string
                  required: true
            responses:
                "200":
                    description: The list of all the Users
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/User"
                                   
    /users/{userID}:
        get:
            summary: Get a user by id
            tags: [User]
            parameters:
                - name: x-auth-token
                  in: header
                  type: string
                  required: true
                - name: userID
                  in: path
                  required: true
                  description: Autogenerated User ID by Mongoose
                  schema:
                      type: string
            responses:
                "200":
                    description: Successfully Fetched single product by the id.
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/User"
        patch:
            summary: Update a User by ID
            tags: [User]
            parameters:
                - name: x-auth-token
                  in: header
                  type: string
                  required: true
                - name: userID
                  in: path
                  required: true
                  description: Autogenerated User ID by Mongoose
                  schema:
                      type: string
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/User"
            responses:
                "200":
                    description: Update a single User by the id.
                    content:
                        application/json:
                            schema: 
                                $ref: "#/components/schemas/User"
        delete:
            summary: Delete a user by id
            tags: [User]
            parameters:
                - name: x-auth-token
                  in: header
                  type: string
                  required: true
                - name: userID
                  in: path
                  required: true
                  description: Autogenerated User ID by Mongoose
                  schema:
                      type: string
            responses:
                "200":
                    description: Successfully Deleted User by the id.
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/User"
    /users/signin :
        post:
            summary: User Signin
            tags: [User]
            consumes:
                - application/json
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: "#/definitions/SigninRequest"
            responses:
                "200":
                    description: Signin User using email and password
    /users/signup :
        post:
            summary: User signup
            tags: [User]
            requestBody:
                required: true
                content:
                    multipart/form-data:
                        schema:
                            $ref: "#/components/schemas/User"
            responses:
                "200":
                    description: User was created successfully
    /users/favouriteBlogs/{userId} :
        get:
            summary: Get User's favourite blogs list
            tags: [User]
            consumes:
                - application/json
            parameters:
            - name: x-auth-token
              in: header
              type: string
              required: true
            - name: userId
              in: path
              required: true
              description: Autogenerated User ID by Mongoose
              schema:
                type: string
            responses:
                "200":
                    description: Favourite Blogs Successfully fetched

    /users/favouriteBlogs/{userId}/{blogId} :
        post:
            summary: Add a Blog to the User's Favorite blogs list
            tags: [User]
            consumes:
                - application/json
            parameters:
            - name: x-auth-token
              in: header
              type: string
              required: true
            - name: userId
              in: path
              required: true
              description: Autogenerated User ID by Mongoose
              schema:
                type: string
            - name: blogId
              in: path
              required: true
              description: Autogenerated Blog ID by Mongoose
              schema:
                type: string
            responses:
                "200":
                    description: Blog Successfully Added to favourite blogs list
        delete:
            summary: Remove a Blog from the User's Favorite blogs list
            tags: [User]
            consumes:
                - application/json
            parameters:
            - name: x-auth-token
              in: header
              type: string
              required: true
            - name: userId
              in: path
              required: true
              description: Autogenerated User ID by Mongoose
              schema:
                type: string
            - name: blogId
              in: path
              required: true
              description: Autogenerated Blog ID by Mongoose
              schema:
                type: string
            responses:
                "200":
                    description: Blog Successfully Removed from favourite blogs list

    /users/cartProducts/{userId} :
        get:
            summary: Get the Products in cart of the User
            tags: [User]
            consumes:
                - application/json
            parameters:
            - name: x-auth-token
              in: header
              type: string
              required: true
            - name: userId
              in: path
              required: true
              description: Autogenerated User ID by Mongoose
              schema:
                type: string
            responses:
                "200":
                    description: Get the Products in cart of the User

    /users/cartProducts/{userId}/{productId} :
        post:
            summary: Add a Blog to the User's Favorite blogs list
            tags: [User]
            consumes:
                - application/json
            parameters:
            - name: x-auth-token
              in: header
              type: string
              required: true
            - name: userId
              in: path
              required: true
              description: Autogenerated User ID by Mongoose
              schema:
                type: string
            - name: productId
              in: path
              required: true
              description: Autogenerated Product ID by Mongoose
              schema:
                type: string
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: "#/definitions/Cart"
            responses:
                "200":
                    description: Product Successfully Added to Cart

        delete:
            summary: Remove product from the cart
            tags: [User]
            consumes:
                - application/json
            parameters:
            - name: x-auth-token
              in: header
              type: string
              required: true
            - name: userId
              in: path
              required: true
              description: Autogenerated User ID by Mongoose
              schema:
                type: string
            - name: productId
              in: path
              required: true
              description: Autogenerated Product ID by Mongoose
              schema:
                type: string
            responses:
                "200":
                    description: Successfully Removed product from cart


components:
    schemas:
        User:
            type: object
            required:
                - firstName
                - lastName
                - email
                - password
                - DOB
                - phone
                - file
            properties:
                firstName:
                    type: string
                    description: First Name of the User
                lastName:
                    type: number
                    description:  Last Name of the User
                email :
                    type: string
                    description: Email of the User
                password :
                    type: string
                    description: Password of User
                DOB :
                    type: string
                    description: Date of Birth of the User
                phone:
                    type: number
                    description: Phone number of the use
                file:
                    type : file
                    description : Profile Image of the User
            example:
                firstName: Shashank
                lastName: Motruri
                email: motrurishashank000@gmail.com
                password: shashank
                DOB: 2002-05-21
                phone: 8978205663
                file: https://storage.googleapis.com/matchup-444.appspot.com/macbook.jpg
        Product:
            type: object
            required:
                - name
                - price
                - file
                - available
            properties:
                name:
                    type: string
                    description: Name of the Product
                price:
                    type: number
                    description: Price of the Product that is being sell
                available:
                    type: number
                    description: Available number of products
                file:
                    type : file
                    description : Image of the Product
            example:
                name: Apple MacBook,
                price: 9999,
                cover : https://storage.googleapis.com/matchup-444.appspot.com/macbook.jpg
                sellerUserId: 6246e608b1923e4b8f0f9ece
                available : 2
        Blog:
            type: object
            required:
                - title
                - description
                - file
            properties:
                title:
                    type: string
                    description: Name of the Blog
                description:
                    type: string
                    description: Description about the Product
                file:
                    type : file
                    description : Image of the Product
            example:
                title: Harry Porter,
                description: Fantacy,
                productImage: https://storage.googleapis.com/matchup-444.appspot.com/24839.jpg,
                sellerUserId: 6246e608b1923e4b8f0f9ece

definitions:
  SigninRequest:
    type: object
    items:
      email: 
       type: string 
       required: true
       description: User Email
      password: 
       type: string 
       required: true
       description: User password 
    example:
        email: "motrurishashank000@gmail.com"
        password: "shashank"
  ProductPatchRequest:
    type: object
    items:
      $ref: "#/definitions/ProductPatchDocument"
  ProductPatchDocument: 
    description: A JSONPatch document for Products
    properties: 
     name: 
      type: string 
      description: Update Name of Product
     price: 
      type: number 
      description: Update Price of Product 
  BlogPatchRequest:
    type: object
    items:
      $ref: "#/definitions/BlogPatchDocument"
  BlogPatchDocument: 
    description: A JSONPatch document for Blogs
    properties: 
     title: 
      type: string 
      description: Update Name of Blog
     description: 
      type: string 
      description: Update Description of Blog
  Cart:
    type: object
    required:
        - quantity
    properties:
        quantity:
            type: number
            description: Quantity of the Product
    example:
        quantity: 1